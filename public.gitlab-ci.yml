# Build the documentation
build_doc:
  stage: build
  tags:
    - docker
    - linux
  image:
    name: pandoc/alpine
    entrypoint: ["/bin/sh", "-c"]
  script:
    - mkdir -p public
    - echo '<meta name="google-site-verification" content="ooqaohCgAywtsa97hQcmfXVsc5ZlgQaKSnXvTkSSLGE" />' > header.html
    - pandoc -f markdown -t html -s README.md -o public/index.html --metadata title="PNIO-DCP" --metadata keywords=python,dcp,profinet -H header.html
  artifacts:
    paths:
      - public
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]+$/'
      when: on_success
      allow_failure: false
    - when: manual
      allow_failure: true

# Build the python package
build_package:
  stage: build
  tags:
    - docker
    - linux
  image: python
  script:
    - python -m pip install setuptools wheel twine
    - python setup.py sdist bdist_wheel
  artifacts:
    paths:
      - ./dist/*.whl
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]+$/'
      when: on_success
      allow_failure: false
    - when: manual
      allow_failure: true

# Upload the package to PyPI
deploy_package:
  stage: deploy
  tags:
    - docker
    - linux
  image: python
  script:
    - twine check dist/*
    - twine upload dist/*.whl
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]+$/'
      when: on_success
      allow_failure: false
    - when: manual
      allow_failure: true

# Publish a release on the gitlab release page
deploy_release_page:
  stage: deploy
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  tags:
    - docker
    - linux
  before_script:
    - echo "create release"
  script:
    - echo 'release job'
    - export RELEASE_DESC=$(awk 's{ print ""; print}; $0~v {print; s=1; next}; s=0' RS= v="${RELEASE_TAG//v/}" CHANGELOG.md)
    - echo "${RELEASE_DESC}" > .release_desc.md
    - cat .release_desc.md
    - export PACKAGE_URL="https://pypi.org/project/pnio-dcp/${RELEASE_TAG:1}"
    - echo "${PACKAGE_URL}"
    - | 
        release-cli create \
          --name "${RELEASE_TAG}" \
          --description ".release_desc.md" \
          --tag-name "${RELEASE_TAG}" \
          --assets-link "{\"url\":\"${PACKAGE_URL}\",\"name\":\"PyPI Package\",\"link_type\":\"package\"}"
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]+$/'
      when: on_success
      allow_failure: false
      variables:
        RELEASE_TAG: '$CI_COMMIT_TAG'
    - when: manual
      allow_failure: true
